---
---

<script type="module">
    function setupToc() {
        const article = document.getElementsByTagName("article")[0];
        if (article) {
            const oldheadings = article.querySelectorAll("h1, h2, h3, h4, h5, h6");
            let headings = Array.from(oldheadings).filter(heading => !heading.classList.contains('title'));
            if (headings.length === 0) {
                return;
            }

            const tocWrapper = document.createElement("div");
            tocWrapper.classList.add("toc-wrapper");
            document.body.appendChild(tocWrapper);

            const tocInner = document.createElement("div");
            tocInner.classList.add("toc-inner");

            const tocContent = document.createElement("div");
            tocInner.classList.add("toc");

            const tocList = document.createElement("ul");
            let currentList = tocList;
            let previousLevel = 1;

            headings.forEach(function (heading) {
                let id = heading.id;
                if (!id) {
                    id = 'toc-' + Math.random().toString(36).substring(2, 11);
                    heading.id = id;
                }

                const level = parseInt(heading.tagName.substring(1), 10);
                const listItem = document.createElement("li");
                listItem.innerHTML = '<a href="#' + id + '"><span class="box"></span>' + heading.innerText + '</a>';

                if (level > previousLevel) {
                    const nestedList = document.createElement("ul");
                    currentList.lastElementChild.appendChild(nestedList);
                    currentList = nestedList;
                } else if (level < previousLevel) {
                    while (level < previousLevel && currentList.parentElement.tagName.toLowerCase() === 'li') {
                        currentList = currentList.parentElement.parentElement;
                        previousLevel--;
                    }
                }

                currentList.appendChild(listItem);
                previousLevel = level;
            });
            tocContent.appendChild(tocList);
            tocInner.innerHTML = '<div class="toc-head"><button class="toc-toggle" onclick="window.scrollTo({top: 0});" >展开/折叠</button><b class="toc-head-title">目录</b><a class="toc-head-top" href="javascript:void(0);" onclick="window.scrollTo({top: 0});">↑ 顶部</a></div>';
            tocInner.appendChild(tocContent);
            tocWrapper.appendChild(tocInner);

            let isClicking = false;
            let intersectionObserver;

            const observeHeadings = () => {
                intersectionObserver = new IntersectionObserver(function (entries) {
                    if (isClicking) return;

                    entries.forEach(function (entry) {
                        const tocLink = document.querySelector('.toc li a[href="#' + entry.target.getAttribute("id") + '"]');
                        if (tocLink && entry.isIntersecting) {
                            document.querySelectorAll(".toc li.active").forEach(function (activeItem) {
                                activeItem.classList.remove("active");
                            });
                            tocLink.parentElement.classList.add("active");
                        }
                    });
                },  {
                    rootMargin: '-43% 0% -43% 0%'
                });

                headings.forEach(function (heading) {
                    intersectionObserver.observe(heading);
                });
            };

            observeHeadings();

            document.querySelectorAll(".toc li a").forEach(function (link) {
                link.addEventListener("click", function (event) {
                    event.preventDefault();
                    const targetId = link.getAttribute("href").substring(1);
                    const targetElement = document.getElementById(targetId);
                    if (targetElement) {
                        isClicking = true;
                        intersectionObserver.disconnect();
                        targetElement.scrollIntoView({ behavior: "smooth", block: "start" });
                        document.querySelectorAll(".toc li.active").forEach(function (activeItem) {
                            activeItem.classList.remove("active");
                        });
                        link.parentElement.classList.add("active");
                        // 定位到中间
                        const elementRect = targetElement.getBoundingClientRect();
                        const offset = window.innerHeight / 3 - (elementRect.height / 2);
                        window.scrollTo({
                            top: window.scrollY + elementRect.top - offset,
                            behavior: "smooth"
                        });

                        setTimeout(function () {
                            isClicking = false;
                            observeHeadings();
                        }, 1000);

                        history.pushState(null, null, '#' + targetId);
                    }
                });
            });
            document.querySelector(".toc-toggle").addEventListener("click", function () {
                const ul = document.querySelector(".toc > div > ul");
                if (ul) {
                    ul.classList.toggle("show");
                }
            });

            document.addEventListener('DOMContentLoaded', function () {
                const toggleButton = document.querySelector(".toc-toggle");
                if (toggleButton) {
                    toggleButton.removeEventListener("click", handleToggleClick); // 移除现有监听器
                    toggleButton.addEventListener("click", handleToggleClick);
                } else {
                    console.error("TOC toggle button not found");
                }
            });

            function handleToggleClick() {
                console.log("TOC toggle clicked");
                const ul = document.querySelector(".toc > div > ul");
                if (ul) {
                    ul.classList.toggle("show");
                }
            }

            // document.addEventListener('click', function (event) {
            //     if (event.target.matches('.toc-toggle')) {
            //         console.log("TOC toggle clicked");
            //         const ul = document.querySelector(".toc > div > ul");
            //         if (ul) {
            //             ul.classList.toggle("show");
            //         }
            //     }
            // });

            window.addEventListener("hashchange", function () {
                const hash = window.location.hash.substring(1);
                const targetElement = document.getElementById(hash);
                if (targetElement) {
                    document.querySelectorAll(".toc li.active").forEach(function (activeItem) {
                        activeItem.classList.remove("active");
                    });
                    const activeLink = document.querySelector('.toc li a[href="#' + hash + '"]');
                    if (activeLink) {
                        activeLink.parentElement.classList.add("active");
                    }
                }
            });
        }
    }

    document.addEventListener('DOMContentLoaded', function () {
        setupToc()
    });
    setupToc();
</script>