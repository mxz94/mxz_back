name: Generate GitBlog README

on:
  workflow_dispatch:
  watch:
    types: [started]
  issues:
    types: [opened, edited]
  issue_comment:
    types: [created, edited]
  push:
    branches:
      - master
    paths:
      - main.py

jobs:
  sync:
    name: Generate README
    runs-on: ubuntu-latest
    if: github.repository_owner_id == github.event.issue.user.id || github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
          cache: pip
          cache-dependency-path: "requirements.txt"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Generate new md
        run: |
          source venv/bin/activate
          python main.py ${{ secrets.G_T }} ${{ github.repository }} ${{ secrets.R2_TOKEN }} ${{ secrets.R2_KEY }} --issue_number '${{ github.event.issue.number }}'


      - name: backup data files
        run: |
          # mv ./_data/movie.json ./_data/douban/movie_$(date +%Y-%m-%d).json.bak
          rm -rf ./public/douban
          
      - name: movie
        uses: lizheming/doumark-action@master
        with:
          id: mxz94
          type: movie
          format: json
          dir: ./public/douban

        
      - name: Pull activities.json
        run: |
          curl -o public/activities.json https://raw.githubusercontent.com/mxz94/mxz_back/refs/heads/master/public/activities.json
        
      - name: Push README
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add src/content/*
          git add public/*
          git add src/pages/*
          git commit -a -m 'update new blog' || echo "nothing to commit"
          git push || echo "nothing to push"
          
      # Node.js 环境设置和编译前端项目
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # 使用 Node.js 版本，按需修改
      # 使用缓存机制缓存 node_modules
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules  # 缓存路径
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}  # 缓存键基于 package-lock.json
          restore-keys: |
            ${{ runner.os }}-node-
            
      - name: Install Node.js dependencies
        run: npm install  # 安装 Node.js 依赖
      
      - name: Set current year
        id: set_year
        run: echo "year=$(date +'%Y')" >> $GITHUB_ENV
        
      - name: Cache transformed images
        uses: actions/cache@v3
        with:
          path: dist/_astro  # 缓存转换后的图片文件
          key: ${{ runner.os }}-images-${{ github.event_name }}-${{ steps.set_year.outputs.year }}  # 包含年份
          restore-keys: |
            ${{ runner.os }}-images-${{ github.event_name }}-  # 只用年份的部分

            
      - name: Build project with Node.js
        run: npm run build  # 编译项目，通常会生成到 dist 文件夹
      # 将编译结果部署到服务器
      - name: Deploy to Server
        uses: appleboy/scp-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "./dist/*"  # 假设构建后的文件在 dist 文件夹
          target: "/www/wwwroot/malanxi/blog"  # 替换为服务器上的路径
